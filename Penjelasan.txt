Tahap 1 : Mengambil nilai
    1. Mengambil elemen dengan id tf-input dan disimpan ke input
    const input = document.getElementById('tf-input');
    2. tf-input didapat dari 
        <input type="text" placeholder="Enter a task" class="textField" id="tf-input">
    3. Menyimpan nilai dari input ke variabel baru "inputValue"
        const inputValue = input.value;

Tahap 2 : Membuat li > p
    1. Membuat elemen list baru dan disimpan ke variabel task
        const task = document.createElement('li');
    2. Membuat elemen p baru dan disimpan ke variabel x
        const x = document.createElement('p');
    3. Menambahkan atau memasukkan nilai dari inputValue kedalam x. x ini merupakan tempat menyimpan elemen p baru. Jadi inputValue tadi disimpan kedalam p.
    x.textContent = inputValue;
    4. Memasukkan x tadi kedalam task. task merupakan sebuah li (list)
        task.appendChild(x);
    5. Menambahkan kelas CSS bernama 'items' ke elemen <li> yang baru
        task.classList.add('items');

Tahap 3 : Membuat id list baru
    1. task.id = 'task-' + Date.now()

Tahap 4 : Membuat button edit dan delete
    1. Membuat elemen button dan disimpan ke variabel bEdit
        const bEdit = document.createElement('button')
    2. Memberi nama button bEdit
        bEdit.textContent = "Edit";
    3. Menambahakan CSS
        bEdit.classList.add('button-edit');
    4. Menambahakn bEdit kedalam variabel task
        task.appendChild(bEdit);

    1. Membuat elemen button dan disimpan ke variabel bDelete
        const bDelete = document.createElement('button');
    2. Memberi nama button bDelete
        bDelete.textContent = "Delete";
    3. Menambahakan CSS
        bDelete.classList.add('button-delete');
    4. Menambahakn bDelete variabel task
        task.appendChild(bDelete);

Tahap 5 : Menampilkan inputan dan button
    1. Mencari elemen dengan id bernama 'task-container', yang merupakan wadah (container) untuk menampung daftar tugas (task list). Dan disimpan ke variabel taskContainer.
        const taskContainer = document.getElementById('task-container');
    2. task-container didapat dari
        <ol id="task-container"></ol>
    3. Menambahkan task kedalam taskContainer
        taskContainer.appendChild(task);

Tahap 6 : Menghapus
    1. bDelete.addEventListener('click', function() {
                deleteTask(task.id);
            })
        ketika button bDelete ditekan, maka akan menjalankan sebuah fungsi dan memanggil fungsi deleteTask. task akan dihapus sesuai id.
    2. function deleteTask(id) {
        const taskDelete = document.getElementById(id);
        taskDelete.remove();
        }
        Menggunakan document.getElementById(id), kita mencari elemen yang memiliki ID yang sesuai dengan parameter id yang diterima.

Tahap 7 : Edit
    1. bEdit.addEventListener('click', function () {
                editTask(task.id);
            })
        ketika button bEdit ditekan, maka akan menjalankan sebuah fungsi dan memanggil fungsi editTask. task akan diedit sesuai id.
    2. const taskEdit = document.getElementById(id);
        Menggunakan document.getElementById(id), kita mencari elemen yang memiliki ID yang sesuai dengan parameter id yang diterima. Dan disimpan kedalama taskEdit
    3. const text = taskEdit.querySelector('p').textContent;
        Mengambil konten p dari taskEdit dan dijadikan textContent
    4. const input = document.getElementById('tf-input');
        Mengambil elemen dengan id tf-input dan disimpan ke input
    5. input.value = text;
        Mengisi input dari sebuah text 
    6. idTask = id;
        Menyimpan id ketika button diklik ke dalam variabel idTask
    7. bAdd.onclick = function() {
            updateTask();
        }
        ketika button bAdd di klik akan menjalankan fungsi updateTask()

Tahap 8 : Update dan save
1. const input = document.getElementById('tf-input');
    Mengambil elemen dengan id tf-input dan disimpan ke input
2. const inputNewValue = input.value;
    Nilai dari input tersebut disimpan kedalam variabel inpytNewValue
3. const task = document.getElementById(idTask);
    Mengambil elemen idTask pada fungsi editTask. idTask tersebut untuk menyimpan id sebuah list
4. task.querySelector('p').textContent = inputNewValue;
    Memperbarui teks elemen <p> di dalam task tersebut dengan nilai baru dari input.